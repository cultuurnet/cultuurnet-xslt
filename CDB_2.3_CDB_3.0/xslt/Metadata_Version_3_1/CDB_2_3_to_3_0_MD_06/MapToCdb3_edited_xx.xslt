<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
This file was generated by Altova MapForce 2005

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce 2005 Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cc="http://www.cultuurdatabank.be/XMLSchema/Culture_CS" xmlns:sc="http://www.cultuurdatabank.be/XMLSchema/SA_comp" xmlns:ad="http://www.cultuurdatabank.be/XMLSchema/address" xmlns:ca="http://www.cultuurdatabank.be/XMLSchema/categorisation" xmlns:ci="http://www.cultuurdatabank.be/XMLSchema/city_area" xmlns:ct="http://www.cultuurdatabank.be/XMLSchema/city_comp" xmlns:co="http://www.cultuurdatabank.be/XMLSchema/country" xmlns:ec="http://www.cultuurdatabank.be/XMLSchema/event_cluster" xmlns:ed="http://www.cultuurdatabank.be/XMLSchema/event_date" xmlns:gc="http://www.cultuurdatabank.be/XMLSchema/gis_comp" xmlns:lc="http://www.cultuurdatabank.be/XMLSchema/language_comp" xmlns:mc="http://www.cultuurdatabank.be/XMLSchema/mail_comp" xmlns:me="http://www.cultuurdatabank.be/XMLSchema/media" xmlns:md="http://www.cultuurdatabank.be/XMLSchema/metadata" xmlns:na="http://www.cultuurdatabank.be/XMLSchema/name_comp" xmlns:no="http://www.cultuurdatabank.be/XMLSchema/note_comp" xmlns:ot="http://www.cultuurdatabank.be/XMLSchema/opening_times" xmlns:or="http://www.cultuurdatabank.be/XMLSchema/organisation" xmlns:pe="http://www.cultuurdatabank.be/XMLSchema/person" xmlns:ph="http://www.cultuurdatabank.be/XMLSchema/phone" xmlns:pr="http://www.cultuurdatabank.be/XMLSchema/price" xmlns:ref="http://www.cultuurdatabank.be/XMLSchema/reference_item" xmlns:rn="http://www.cultuurdatabank.be/XMLSchema/region_nat" xmlns:rel="http://www.cultuurdatabank.be/XMLSchema/relation_item" xmlns:sp="http://www.cultuurdatabank.be/XMLSchema/street_part" xmlns:uc="http://www.cultuurdatabank.be/XMLSchema/url_comp" xmlns:zc="http://www.cultuurdatabank.be/XMLSchema/zip_codes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xalan="http://xml.apache.org/xalan" xmlns="http://www.cultuurdatabank.com/XMLSchema/CdbXSD/3.0/FINAL" exclude-result-prefixes="cc sc ad ca ci ct co ec ed gc lc mc me md na no ot or pe ph pr ref rn rel sp uc zc xs xalan">
	<xsl:output method="xml" encoding="ISO-8859-1" indent="no"/>
	<!-- added -->
	<xsl:include href="MapToCategorisation.xslt"/>
	<xsl:include href="MapToActor_with_object_ids.xslt"/>
	<xsl:include href="MapToCalendar.xslt"/>
	<xsl:include href="MapToProductions.xslt"/>
	<xsl:variable name="GeoDoelgroep" select="document('read_only\GeoDoelgroep.xml')"/>
	<xsl:variable name="Age_Doelgroep" select="document('read_only\doelgroep.xml')"/>
	<xsl:variable name="Thema" select="document('read_only\Thema.xml')"/>
	<xsl:variable name="Type" select="document('read_only\Type.xml')"/>
	<xsl:variable name="Countries" select="document('read_only\iso_3166-1_list_en.xml')"/>
	<xsl:variable name="Optional_Cats" select="document('read_only\optional.xml')"/>
	<!-- <xsl:variable name="actor_type" select="'reference'"/> -->
	<!-- <xsl:variable name="actor_type" select="'full'"/>  -->
	 <xsl:variable name="actor_type" select="'full'"/>   
	<!-- <xsl:param name="media_files" select="iis.ext.files"></xsl:param> -->
	<!-- <xsl:param name="media_files" select="'media_files'"></xsl:param> -->
	<xsl:variable name="uppercase" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>
	<xsl:variable name="lowercase" select="'abcdefghijklmnopqretuvwxyz'"/>
	<xsl:template match="/CDB">
		<cdbxml>
			<!-- <xsl:attribute name="xsi:schemaLocation">http://www.cultuurdatabank.com/XMLSchema/CdbXSD/3.0/FINAL //172.16.1.51/xml/XSD/CDB_3_0/CdbXSD_3.0/CdbXSD_3.0/CdbXSD.xsd</xsl:attribute> -->
			<xsl:attribute name="xsi:schemaLocation">http://www.cultuurdatabank.com/XMLSchema/CdbXSD/3.0/FINAL
		http://www.cultuurdatabank.com/XMLSchema/CdbXSD/3.0/FINAL/CdbXSD.xsd</xsl:attribute>
			<!-- add the producuions -->
			<xsl:call-template name="insertProductions"/>
			<!-- add the events -->
			<events>
				<!--<xsl:for-each select="ec:event_cluster"-->
				<xsl:for-each select="//event_cluster_instance[event_cluster_type='aanbod']">
					<xsl:variable name="organisator_exists">
						<xsl:for-each select="organisation">
							<xsl:for-each select="or:organisation">
								<xsl:if test="rel:relation_item/relation_item_instance/categorisation_label = 'organisator'">
									<xsl:value-of select="'true'"/>
								</xsl:if>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:variable>
					<xsl:variable name="location_address">
						<xsl:for-each select="organisation">
							<xsl:for-each select="or:organisation">
								<xsl:if test="rel:relation_item/relation_item_instance/categorisation_label = 'lokatie'">
									<xsl:if test="string(organisation_instance/address) != ''">
										<xsl:value-of select="'true'"/>
									</xsl:if>
								</xsl:if>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:variable>
					<!-- 	check that there is at least one organisation that is a location or an organisation. Plus opening Times. 
							Also check if the location has an address -->
					<xsl:if test="string(organisation) != '' and string(ot:opening_times) != '' and string($organisator_exists) = 'true' and
										string($location_address) = 'true'">
						<event>
							<!-- add agefrom -->
							<xsl:call-template name="insertDoelgroep"/>
							<!-- it is in MApToCategorisartion -->
							<xsl:for-each select="md:availablefrom">
								<xsl:attribute name="availablefrom"><xsl:value-of select="."/></xsl:attribute>
							</xsl:for-each>
							<xsl:for-each select="md:availableto">
								<xsl:if test="substring(.,1,4) &lt; 2020">
									<xsl:attribute name="availableto"><xsl:value-of select="."/></xsl:attribute>
								</xsl:if>
							</xsl:for-each>
							<xsl:for-each select="md:objectid">
								<xsl:attribute name="cdbid"><xsl:value-of select="."/></xsl:attribute>
							</xsl:for-each>
							<xsl:if test="string(md:external_identifier) != ''">
								<xsl:attribute name="externalid"><xsl:value-of select="md:external_identifier"/></xsl:attribute>
							</xsl:if>
							<!-- added-->
							<xsl:call-template name="insertCalendar"/>
							<!-- end added -->
							<!-- added-->
							<xsl:call-template name="insertCategorisation"/>
							<!-- end added -->
							<xsl:variable name="contactinfo">
								<xsl:call-template name="insertContactinfo">
									<xsl:with-param name="contact" select="'true'"/>
								</xsl:call-template>
							</xsl:variable>
							<xsl:choose>
								<xsl:when test="string($contactinfo) != ''">
								
									<xsl:copy-of select="$contactinfo"/>
								</xsl:when>
								<xsl:otherwise>
					
									<!-- copy the information from the organisator -->
									<xsl:for-each select="organisation">
										<xsl:for-each select="or:organisation">
											<xsl:if test="rel:relation_item/relation_item_instance/categorisation_label = 'organisator'">
												<xsl:for-each select="organisation_instance">
													<xsl:call-template name="insertContactinfo">
														<xsl:with-param name="contact" select="'true'"/>
													</xsl:call-template>
												</xsl:for-each>
											</xsl:if>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:otherwise>
							</xsl:choose>
							<eventdetails>
								<eventdetail>
									<!-- the first instance of eventdetail will always be nl as the label is always in Dutch -->
									<xsl:attribute name="lang"><xsl:value-of select="'nl'"/></xsl:attribute>
									<!-- calendersummary -->
									<xsl:call-template name="insertSummary"/>
									<xsl:for-each select="estimated_time">
										<estimatedtime>
											<xsl:value-of select="."/>
										</estimatedtime>
									</xsl:for-each>
									<!-- executors. These are persons or organisations that perform -->
									<!-- first check that at least one exists -->
									<xsl:variable name="executor_exists">
										<xsl:for-each select="organisation">
											<xsl:for-each select="or:organisation">
												<xsl:if test="rel:relation_item/relation_item_instance/categorisation_label != 'lokatie' and rel:relation_item/relation_item_instance/categorisation_label != 'organisator' and rel:relation_item/relation_item_instance/categorisation_label != 'reservator'">
													<xsl:value-of select="1"/>
												</xsl:if>
											</xsl:for-each>
										</xsl:for-each>
										<xsl:if test="string(person) != ''">
											<xsl:value-of select="1"/>
										</xsl:if>
									</xsl:variable>
									<xsl:if test="$executor_exists &gt;= 1">
										<executors>
											<xsl:for-each select="organisation">
												<xsl:for-each select="or:organisation">
													<xsl:if test="rel:relation_item/relation_item_instance/categorisation_label != 'lokatie' and rel:relation_item/relation_item_instance/categorisation_label != 'organisator' and rel:relation_item/relation_item_instance/categorisation_label != 'reservator'">
														<executor>
															<xsl:if test="string(rel:relation_item/relation_item_instance/relationdesc) != 'Uitvoerder' and string(rel:relation_item/relation_item_instance/relationdesc) != ''">
																<role>
																	<xsl:value-of select="concat(translate(substring(rel:relation_item/relation_item_instance/relationdesc, 1, 1), $lowercase,
$uppercase), substring(rel:relation_item/relation_item_instance/relationdesc,2))"/>
																</role>
															</xsl:if>
															<xsl:for-each select="organisation_instance">
															<xsl:variable name="thema_onbepaald">
																<xsl:for-each select="category/categorisation_instance">
																	<xsl:if test="string(label/dutch) = 'Thema onbepaald'">
																		<xsl:value-of select="'true'"/>
																	</xsl:if>
																</xsl:for-each>
															</xsl:variable>
																<xsl:choose>
																	<xsl:when test="string($actor_type) = 'reference' or string($thema_onbepaald) = 'true' or string(md:short_description/dutch) = 'NB'">
																		<xsl:call-template name="insertActor_ref"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:call-template name="insertActor"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</executor>
													</xsl:if>
												</xsl:for-each>
											</xsl:for-each>
											<xsl:for-each select="person">
												<xsl:for-each select="pe:person">
													<executor>
														<xsl:if test="string(rel:relation_item/relation_item_instance/relationdesc) != 'Uitvoerder' and string(rel:relation_item/relation_item_instance/relationdesc) != ''">
															<role>
																<xsl:value-of select="concat(translate(substring(rel:relation_item/relation_item_instance/relationdesc, 1, 1), $lowercase,
$uppercase), substring(rel:relation_item/relation_item_instance/relationdesc,2))"/>
															</role>
														</xsl:if>
														<!-- use the references as a default. Also if the person has category Thema onbepaald -->
														<xsl:for-each select="person_instance">
															<xsl:variable name="thema_onbepaald">
																<xsl:for-each select="category/categorisation_instance">
																	<xsl:if test="string(label/dutch) = 'Thema onbepaald'">
																		<xsl:value-of select="'true'"/>
																	</xsl:if>
																</xsl:for-each>
															</xsl:variable>
															<xsl:choose>
																<xsl:when test="string($actor_type) = 'reference' or string($thema_onbepaald) = 'true' or string(md:short_description/dutch) = 'NB'">
																	<xsl:call-template name="insertActor_ref"/>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:call-template name="insertActor"/>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</executor>
												</xsl:for-each>
											</xsl:for-each>
										</executors>
									</xsl:if>
									<xsl:for-each select="md:label">
										<xsl:for-each select="dutch">
											<label>
												<xsl:value-of select="."/>
											</label>
										</xsl:for-each>
									</xsl:for-each>
									<!-- long description -->
									<!-- check what to do if a long descriptiona nd a .txt file exists : is the following OK ?-->
									<!-- if .txt file is in media_instance and it exists in the file then use it -->
									<!-- if not and a value_plain_text exists then use that -->
									<!-- otherwise do nothing -->
									<!-- the media files are available in the iis system in  iis.ext.files -->
									<!-- <xsl:value-of select="xalan:nodeset($media_files)/0A8AF4EA-B7D0-2E48-0A6AE1B70C38B43A.txt"></xsl:value-of> 
									<xsl:value-of select="xalan:nodeset($media_files/0A8AF4EA-B7D0-2E48-0A6AE1B70C38B43A.txt)"></xsl:value-of>
									<xsl:value-of select="$media_files"></xsl:value-of>
									<xsl:value-of select="xalan:nodeset($media_files)/me:media/media_instance/file"></xsl:value-of>
-->
									<xsl:variable name="media_length" select="string-length(me:media/media_instance/file)"/>
									<xsl:choose>
										<xsl:when test="substring(me:media/media_instance/file,($media_length)-3,4) = '.txt'">
										<xsl:if test="string(me:media/media_instance/value_plain_text/dutch) != 'kinderen toegelaten'">
											<!-- <xsl:value-of select="'contents of text file goes here'"/> -->
											<longdescription>
												<xsl:value-of select="me:media/media_instance/value_plain_text/dutch"/>
											</longdescription>
											</xsl:if>
										</xsl:when>
										<xsl:otherwise>
											<xsl:if test="string(me:media/media_instance/value_plain_text) != ''">
											<xsl:if test="string(me:media/media_instance/value_plain_text/dutch) != 'kinderen toegelaten'">
												<longdescription>
													<xsl:value-of select="me:media/media_instance/value_plain_text/dutch"/>
												</longdescription>
											</xsl:if>
											</xsl:if>
											<!--
											<xsl:variable name="media_exists">
												<xsl:if test="me:media/media_instance/value_plain_text !=''">
													<xsl:value-of select="true()"/>
												</xsl:if>
											</xsl:variable>
											
											<xsl:variable name="media_exists">
												<xsl:for-each select="me:media">
													<xsl:for-each select="media_instance">
														<xsl:if test="string(value_plain_text) !=''">
															<longdescription>
															
															</longdescription>
														</xsl:if>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:variable>
-->
										</xsl:otherwise>
									</xsl:choose>
									<!-- media -->
									<!-- don't include text files -->
									<xsl:variable name="media_exists">
										<xsl:for-each select="me:media">
											<xsl:for-each select="media_instance">
												<xsl:if test="string(file) !='' and string(media_type) != 'txt' and string(me:media/media_instance/copyright) != 'NB'">
													<xsl:value-of select="'true'"/>
												</xsl:if>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:variable>
									<xsl:if test="substring($media_exists,1,4) = 'true'">
										<media>
											<xsl:for-each select="me:media">
												<xsl:for-each select="media_instance">
													<xsl:if test="string(file) !='' and string(media_type) != 'txt' and string(me:media/media_instance/copyright) != 'NB'">
														<file>
															<!-- not needed 
															<xsl:for-each select="md:objectid">
																<xsl:attribute name="cdbid"><xsl:value-of select="."/></xsl:attribute>
															</xsl:for-each>
-->
															<copyright>
																<xsl:choose>
																	<xsl:when test="string(copyright) != ''">
																		<xsl:value-of select="copyright"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="'NB'"/>
																	</xsl:otherwise>
																</xsl:choose>
															</copyright>
															<filename>
																<xsl:value-of select="file"/>
															</filename>
															<xsl:for-each select="media_type">
																<filetype>
																	<xsl:value-of select="."/>
																</filetype>
															</xsl:for-each>
															<hlink>
																<xsl:value-of select="file"/>
															</hlink>
															<xsl:for-each select="md:label">
																<xsl:for-each select="dutch">
																	<label>
																		<xsl:value-of select="."/>
																	</label>
																</xsl:for-each>
															</xsl:for-each>
															<xsl:variable name="mediatype">
																<xsl:value-of select="category/categorisation_instance/label/dutch"/>
															</xsl:variable>
															<mediatype>
																<xsl:choose>
																	<xsl:when test="$mediatype='foto'">
																		<xsl:value-of select="'photo'"/>
																	</xsl:when>
																	<xsl:when test="$mediatype='affiche'">
																		<xsl:value-of select="'poster'"/>
																	</xsl:when>
																	<xsl:when test="$mediatype='andere'">
																		<xsl:value-of select="'other'"/>
																	</xsl:when>
																	<xsl:when test="$mediatype='audio'">
																		<xsl:value-of select="'audio'"/>
																	</xsl:when>
																	<xsl:when test="$mediatype='brochure'">
																		<xsl:value-of select="'brochure'"/>
																	</xsl:when>
																	<xsl:when test="$mediatype='logo'">
																		<xsl:value-of select="'logo'"/>
																	</xsl:when>
																	<xsl:when test="$mediatype='video'">
																		<xsl:value-of select="'video'"/>
																	</xsl:when>
																	<xsl:when test="$mediatype='toegangsvoorwaarden'">
																		<xsl:value-of select="'roadmap'"/>
																	</xsl:when>
																	<xsl:when test="$mediatype='tekst'">
																		<xsl:value-of select="'text'"/>
																	</xsl:when>
																	<xsl:when test="$mediatype='lange omschrijving'">
																		<xsl:value-of select="'text'"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="'other'"/>
																	</xsl:otherwise>
																</xsl:choose>
															</mediatype>
														</file>
													</xsl:if>
												</xsl:for-each>
											</xsl:for-each>
										</media>
									</xsl:if>
									<xsl:for-each select="price_standard">
										<xsl:for-each select="price_instance">
											<xsl:if test="string(price_value) != 'EUR'">
												<!-- added-->
												<xsl:if test="string(price_value) != '' or string(free_of_charge_type) = 'gratis'">
													<!-- end added-->
													<xsl:variable name="free">
														<xsl:if test="string(free_of_charge_type) = 'gratis' or contains(price_value,'grat')">
															<xsl:value-of select="'true'"/>
														</xsl:if>
													</xsl:variable>
													<price>
														<xsl:choose>
															<xsl:when test="$free = 'true'">
																<pricevalue>
																	<xsl:value-of select="'0'"/>
																</pricevalue>
															</xsl:when>
															<xsl:otherwise>
																<xsl:for-each select="price_value">
																	<pricevalue>
																		<xsl:variable name="price">
																			<xsl:choose>
																				<xsl:when test="contains(.,'-')">
																					<xsl:value-of select="substring-before(.,'-')"/>
																				</xsl:when>
																				<xsl:when test="contains(.,'&#8211;')">
																					<xsl:value-of select="substring-before(.,'&#8211;')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="."/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:value-of select="translate(translate($price,',EUR&#226;&#128;&#147;&#8211;','.'),'_','')"/>
																	</pricevalue>
																</xsl:for-each>
															</xsl:otherwise>
														</xsl:choose>
														<xsl:for-each select="me:media">
															<xsl:for-each select="media_instance">
																<xsl:for-each select="value_plain_text">
																	<xsl:for-each select="dutch">
																		<xsl:if test="string(.) != 'NB'">
																			<pricedescription>
																				<xsl:value-of select="."/>
																			</pricedescription>
																		</xsl:if>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</price>
												</xsl:if>
											</xsl:if>
										</xsl:for-each>
									</xsl:for-each>
									<xsl:for-each select="md:short_description">
										<xsl:for-each select="dutch">
											<shortdescription>
												<xsl:value-of select="."/>
											</shortdescription>
										</xsl:for-each>
									</xsl:for-each>
								</eventdetail>
								<!-- a second eventdetails is needed if there are multilanguage fields 				-->
								<!-- there can be more than 1 																			-->
								<!-- first take all multilanguage labels and also check if a multilanguage short 	-->
								<!-- description exists with the same language													-->
								<xsl:variable name="dutch_label" select="md:label/dutch"/>
								<xsl:variable name="label_multilanguage">
									<xsl:for-each select="md:label">
										<xsl:for-each select="multilanguage">
											<xsl:variable name="cdb_language" select="language"/>
											<xsl:variable name="lab_language">
												<xsl:if test="string(language) = 'Frans' or string(language) = 'fr'">
													<xsl:value-of select="'fr'"/>
												</xsl:if>
												<xsl:if test="string(language) = 'Nederlands'">
													<xsl:value-of select="'nl'"/>
												</xsl:if>
												<xsl:if test="string(language) = 'Engels'">
													<xsl:value-of select="'en'"/>
												</xsl:if>
												<xsl:if test="string(language) = 'Duits'">
													<xsl:value-of select="'de'"/>
												</xsl:if>
											</xsl:variable>
											<xsl:if test="string($lab_language) != ''">
												<eventdetail>
													<xsl:attribute name="lang"><xsl:value-of select="$lab_language"/></xsl:attribute>
													<label>
														<xsl:value-of select="name"/>
													</label>
													<xsl:choose>
														<xsl:when test="string(../../md:short_description/multilanguage[language=$cdb_language]) != ''">
															<shortdescription>
																<xsl:choose>
																	<xsl:when test="string(../../md:short_description/multilanguage[language=$cdb_language]/description) = ''">
																		<xsl:value-of select="'NB'"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="../../md:short_description/multilanguage[language=$cdb_language]/description"/>
																	</xsl:otherwise>
																</xsl:choose>
															</shortdescription>
														</xsl:when>
														<xsl:otherwise>
															<shortdescription>
																<xsl:value-of select="'NB'"/>
															</shortdescription>
														</xsl:otherwise>
													</xsl:choose>
												</eventdetail>
											</xsl:if>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:variable>
								<!-- if $label_multilanguage is empty then there were no multilanguage labels so take all the multilanguage 	-->
								<!--short descriptions 																																	-->
								<xsl:variable name="sd_multilanguage">
									<xsl:if test="string($label_multilanguage) = ''">
										<xsl:for-each select="md:short_description/multilanguage">
											<xsl:variable name="sd_language">
												<xsl:if test="string(language) = 'Frans' or string(language) = 'fr'">
													<xsl:value-of select="'fr'"/>
												</xsl:if>
												<xsl:if test="string(language) = 'Nederlands'">
													<xsl:value-of select="'nl'"/>
												</xsl:if>
												<xsl:if test="string(language) = 'Engels'">
													<xsl:value-of select="'en'"/>
												</xsl:if>
												<xsl:if test="string(language) = 'Duits'">
													<xsl:value-of select="'de'"/>
												</xsl:if>
											</xsl:variable>
											<xsl:if test="string($sd_language) != ''">
												<eventdetail>
													<xsl:attribute name="lang"><xsl:value-of select="$sd_language"/></xsl:attribute>
													<label>
														<xsl:value-of select="$dutch_label"/>
													</label>
													<shortdescription>
														<xsl:value-of select="description"/>
													</shortdescription>
												</eventdetail>
											</xsl:if>
										</xsl:for-each>
									</xsl:if>
								</xsl:variable>
								<!-- and finally the case where a short description exists in a language that is not present in a label 			-->
								<!-- this will only be needed if label_multilanguage contains some info, otherwise all the short_descriptions 	-->
								<!-- will have been put in sd_multilanguage																										-->
								<xsl:variable name="new_multilanguage">
									<xsl:if test="string($label_multilanguage) != ''">
										<xsl:for-each select="md:short_description/multilanguage">
											<xsl:variable name="sd_language">
												<xsl:if test="string(language) = 'Frans' or string(language) = 'fr'">
													<xsl:value-of select="'fr'"/>
												</xsl:if>
												<xsl:if test="string(language) = 'Nederlands'">
													<xsl:value-of select="'nl'"/>
												</xsl:if>
												<xsl:if test="string(language) = 'Engels'">
													<xsl:value-of select="'en'"/>
												</xsl:if>
												<xsl:if test="string(language) = 'Duits'">
													<xsl:value-of select="'de'"/>
												</xsl:if>
											</xsl:variable>
											<xsl:variable name="match">
												<xsl:for-each select="../../md:label/multilanguage">
													<xsl:variable name="lab_language">
														<xsl:if test="string(language) = 'Frans' or string(language) = 'fr'">
															<xsl:value-of select="'fr'"/>
														</xsl:if>
														<xsl:if test="string(language) = 'Nederlands'">
															<xsl:value-of select="'nl'"/>
														</xsl:if>
														<xsl:if test="string(language) = 'Engels'">
															<xsl:value-of select="'en'"/>
														</xsl:if>
														<xsl:if test="string(language) = 'Duits'">
															<xsl:value-of select="'de'"/>
														</xsl:if>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="$lab_language = $sd_language">
															<xsl:value-of select="'true'"/>
														</xsl:when>
														<xsl:otherwise>
															<xsl:value-of select="'false'"/>
														</xsl:otherwise>
													</xsl:choose>
												</xsl:for-each>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="contains($match,'true')">
													<!-- do nothing -->
												</xsl:when>
												<xsl:otherwise>
													<xsl:if test="string($sd_language) != ''">
														<eventdetail>
															<xsl:attribute name="lang"><xsl:value-of select="$sd_language"/></xsl:attribute>
															<label>
																<xsl:value-of select="$dutch_label"/>
															</label>
															<shortdescription>
																<xsl:value-of select="description"/>
															</shortdescription>
														</eventdetail>
													</xsl:if>
												</xsl:otherwise>
											</xsl:choose>
										</xsl:for-each>
									</xsl:if>
								</xsl:variable>
								<xsl:copy-of select="$label_multilanguage"/>
								<xsl:copy-of select="$sd_multilanguage"/>
								<xsl:copy-of select="$new_multilanguage"/>
							</eventdetails>
							<!-- event relations. this is where references to a production or koepelevent go -->
							<xsl:if test="../../../event_cluster_type='productie' or string(is_koepel) = '1'">
								<eventrelations>
									<xsl:if test="../../../event_cluster_type='productie'">
										<relatedproduction>
											<xsl:attribute name="cdbid"><xsl:value-of select="md:objectid"/></xsl:attribute>
											<xsl:if test="md:external_identifier != '' and md:external_identifier != 'onbepaald'">
												<xsl:attribute name="externalid"><xsl:value-of select="md:external_identifier"/></xsl:attribute>
											</xsl:if>
											<xsl:value-of select="md:label/dutch"/>
										</relatedproduction>
									</xsl:if>
									<xsl:if test="string(is_koepel) = '1'">
										<parentevent>
											<xsl:attribute name="cdbid"><xsl:value-of select="md:objectid"/></xsl:attribute>
											<xsl:if test="md:external_identifier != '' and md:external_identifier != 'onbepaald'">
												<xsl:attribute name="externalid"><xsl:value-of select="md:external_identifier"/></xsl:attribute>
											</xsl:if>
											<xsl:value-of select="md:label/dutch"/>
										</parentevent>
									</xsl:if>
								</eventrelations>
							</xsl:if>
							<xsl:for-each select="md:keywords">
								<keywords>
									<xsl:value-of select="."/>
								</keywords>
							</xsl:for-each>
							<!-- added -->
							<languages>
								<xsl:for-each select="lc:language_comp">
									<xsl:for-each select="language_comp_instance">
										<xsl:for-each select="iso_code">
											<language>
												<xsl:value-of select="."/>
											</language>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</languages>
							<!--end added -->
							<xsl:variable name="lokatie_exists">
								<xsl:for-each select="organisation">
									<xsl:for-each select="or:organisation">
										<xsl:if test="rel:relation_item/relation_item_instance/categorisation_label = 'lokatie'">
											<xsl:value-of select="true()"/>
										</xsl:if>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:variable>
							<xsl:choose>
								<xsl:when test="string($lokatie_exists) = 'true'">
									<xsl:for-each select="organisation">
										<xsl:for-each select="or:organisation">
											<xsl:if test="rel:relation_item/relation_item_instance/categorisation_label = 'lokatie'">
												<location>
													<xsl:for-each select="organisation_instance">
													<xsl:variable name="thema_onbepaald">
																<xsl:for-each select="category/categorisation_instance">
																	<xsl:if test="string(label/dutch) = 'Thema onbepaald'">
																		<xsl:value-of select="'true'"/>
																	</xsl:if>
																</xsl:for-each>
															</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($actor_type) = 'reference' or string($thema_onbepaald) = 'true' or string(md:short_description/dutch) = 'NB'">
																<locationpart>
																	<xsl:call-template name="insertActor_address_ref"/>
																	<xsl:call-template name="insertActor_ref"/>
																</locationpart>
															</xsl:when>
															<xsl:otherwise>
																<xsl:call-template name="insertActor"/>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</location>
											</xsl:if>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:when>
								<xsl:otherwise>
									<xsl:for-each select="organisation">
										<xsl:for-each select="or:organisation">
											<xsl:if test="rel:relation_item/relation_item_instance/categorisation_label = 'organisator'">
												<location>
													<xsl:for-each select="organisation_instance">
													<xsl:variable name="thema_onbepaald">
																<xsl:for-each select="category/categorisation_instance">
																	<xsl:if test="string(label/dutch) = 'Thema onbepaald'">
																		<xsl:value-of select="'true'"/>
																	</xsl:if>
																</xsl:for-each>
															</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($actor_type) = 'reference' or string($thema_onbepaald) = 'true' or string(md:short_description/dutch) = 'NB'">
																<xsl:call-template name="insertActor_ref"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:call-template name="insertActor"/>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</location>
											</xsl:if>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:otherwise>
							</xsl:choose>
							<xsl:variable name="organisator_exists">
								<xsl:for-each select="organisation">
									<xsl:for-each select="or:organisation">
										<xsl:if test="rel:relation_item/relation_item_instance/categorisation_label = 'organisator'">
											<xsl:value-of select="true()"/>
										</xsl:if>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:variable>
							<xsl:choose>
								<xsl:when test="string($organisator_exists) = 'true'">
									<xsl:for-each select="organisation">
										<xsl:for-each select="or:organisation">
											<xsl:if test="rel:relation_item/relation_item_instance/categorisation_label = 'organisator'">
												<organisor>
													<xsl:for-each select="organisation_instance">
													<xsl:variable name="thema_onbepaald">
																<xsl:for-each select="category/categorisation_instance">
																	<xsl:if test="string(label/dutch) = 'Thema onbepaald'">
																		<xsl:value-of select="'true'"/>
																	</xsl:if>
																</xsl:for-each>
															</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($actor_type) = 'reference' or string($thema_onbepaald) = 'true' or string(md:short_description/dutch) = 'NB'">
																<xsl:call-template name="insertActor_ref"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:call-template name="insertActor"/>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</organisor>
											</xsl:if>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:when>
								<xsl:otherwise>
									<xsl:for-each select="organisation">
										<xsl:for-each select="or:organisation">
											<xsl:if test="rel:relation_item/relation_item_instance/categorisation_label = 'lokatie'">
												<organisor>
													<xsl:for-each select="organisation_instance">
													<xsl:variable name="thema_onbepaald">
																<xsl:for-each select="category/categorisation_instance">
																	<xsl:if test="string(label/dutch) = 'Thema onbepaald'">
																		<xsl:value-of select="'true'"/>
																	</xsl:if>
																</xsl:for-each>
															</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($actor_type) = 'reference' or string($thema_onbepaald) = 'true' or string(md:short_description/dutch) = 'NB'">
																<xsl:call-template name="insertActor_ref"/>
															</xsl:when>
															<xsl:otherwise>
																<xsl:call-template name="insertActor"/>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</organisor>
											</xsl:if>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:otherwise>
							</xsl:choose>
							<xsl:for-each select="organisation">
								<xsl:for-each select="or:organisation">
									<xsl:if test="rel:relation_item/relation_item_instance/categorisation_label = 'reservator'">
										<reservator>
											<xsl:for-each select="organisation_instance">
											<xsl:variable name="thema_onbepaald">
																<xsl:for-each select="category/categorisation_instance">
																	<xsl:if test="string(label/dutch) = 'Thema onbepaald'">
																		<xsl:value-of select="'true'"/>
																	</xsl:if>
																</xsl:for-each>
															</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($actor_type) = 'reference' or string($thema_onbepaald) = 'true' or string(md:short_description/dutch) = 'NB'">														<xsl:call-template name="insertActor_ref"/>
													</xsl:when>
													<xsl:otherwise>
														<xsl:call-template name="insertActor"/>
													</xsl:otherwise>
												</xsl:choose>
											</xsl:for-each>
										</reservator>
									</xsl:if>
								</xsl:for-each>
							</xsl:for-each>
						</event>
					</xsl:if>
				</xsl:for-each>
				<!--</xsl:for-each>-->
			</events>
			<!-- deletes -->
			<xsl:if test="string(delete) != ''">
				<deletes>
					<xsl:for-each select="delete">
						<delete>
							<xsl:for-each select="delete_event_cluster">
								<xsl:attribute name="objecttype"><xsl:value-of select="'event'"/></xsl:attribute>
								<xsl:attribute name="cdbid"><xsl:value-of select="objectid"/></xsl:attribute>
							</xsl:for-each>
							<xsl:for-each select="delete_person">
								<xsl:attribute name="objecttype"><xsl:value-of select="'actor'"/></xsl:attribute>
								<xsl:attribute name="cdbid"><xsl:value-of select="objectid"/></xsl:attribute>
							</xsl:for-each>
							<xsl:for-each select="delete_organisation">
								<xsl:attribute name="objecttype"><xsl:value-of select="'actor'"/></xsl:attribute>
								<xsl:attribute name="cdbid"><xsl:value-of select="objectid"/></xsl:attribute>
							</xsl:for-each>
							<xsl:for-each select="delete_link">
								<xsl:attribute name="objecttype"><xsl:value-of select="'link'"/></xsl:attribute>
								<xsl:attribute name="cdbid"><xsl:value-of select="objectid"/></xsl:attribute>
							</xsl:for-each>
						</delete>
					</xsl:for-each>
				</deletes>
			</xsl:if>
		</cdbxml>
	</xsl:template>
</xsl:stylesheet>
